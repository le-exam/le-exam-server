<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.leexam.mapper.ExamineeMapper">
  <resultMap id="BaseResultMap" type="com.leexam.entity.Examinee">
    <!--@mbg.generated-->
    <!--@Table examinee-->
    <id column="eeid" jdbcType="INTEGER" property="eeid" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="eid" jdbcType="INTEGER" property="eid" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="id" jdbcType="VARCHAR" property="id" />
    <result column="login_time" jdbcType="TIMESTAMP" property="loginTime" />
    <result column="is_email" jdbcType="INTEGER" property="isEmail" />
    <result column="grade" jdbcType="DOUBLE" property="grade" />
    <result column="is_score" jdbcType="INTEGER" property="isScore" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="cost_time" jdbcType="INTEGER" property="costTime" />
    <result column="pwd" jdbcType="VARCHAR" property="pwd" />
    <association property="exam" javaType="com.leexam.entity.Exam">
      <id column="eid3" jdbcType="INTEGER" property="eid" />
      <result column="ename" jdbcType="VARCHAR" property="ename" />
      <result column="start_time3" jdbcType="TIMESTAMP" property="startTime" />
      <result column="end_time3" jdbcType="TIMESTAMP" property="endTime" />
      <result column="login_in_advance" jdbcType="INTEGER" property="loginInAdvance" />
      <result column="restricted_login" jdbcType="INTEGER" property="restrictedLogin" />
      <result column="welcome_msg" jdbcType="LONGVARCHAR" property="welcomeMsg" />
      <result column="test_paper" jdbcType="LONGVARCHAR" property="testPaper" />
      <result column="personal_info" jdbcType="LONGVARCHAR" property="personalInfo" />
      <result column="e_sign_up" jdbcType="INTEGER" property="eSignUp" />
      <result column="e_practice_mode" jdbcType="INTEGER" property="ePracticeMode" />
      <result column="e_ommitment" jdbcType="INTEGER" property="eOmmitment" />
      <result column="e_ommitment_body" jdbcType="LONGVARCHAR" property="eOmmitmentBody" />
      <result column="e_locked_exam" jdbcType="INTEGER" property="eLockedExam" />
      <result column="e_view_results" jdbcType="INTEGER" property="eViewResults" />
      <result column="url3" jdbcType="VARCHAR" property="url" />
    </association>
    <collection property="signupDoList" ofType="com.leexam.entity.SignupDo">
      <id column="sdid" jdbcType="INTEGER" property="sdid" />
      <result column="eeid2" jdbcType="INTEGER" property="eeid" />
      <result column="sid2" jdbcType="INTEGER" property="sid" />
      <result column="time" jdbcType="TIMESTAMP" property="time" />
      <association property="signup" javaType="com.leexam.entity.Signup">
        <id column="sid" jdbcType="INTEGER" property="sid" />
        <result column="sname" jdbcType="VARCHAR" property="sname" />
        <result column="banner" jdbcType="VARCHAR" property="banner" />
        <result column="sdesc" jdbcType="VARCHAR" property="sdesc" />
        <result column="is_verify" jdbcType="INTEGER" property="isVerify" />
        <result column="collect_info" jdbcType="LONGVARCHAR" property="collectInfo" />
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
        <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
        <result column="oid" jdbcType="INTEGER" property="oid" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="status2" jdbcType="INTEGER" property="status" />
      </association>
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    eeid, `status`, `number`, `name`, eid, email, phone, gender, id, login_time, is_email, 
    grade, is_score, create_time, finish_time, cost_time, pwd
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from examinee
    where eeid = #{eeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from examinee
    where eeid = #{eeid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="eeid" keyProperty="eeid" parameterType="com.leexam.entity.Examinee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into examinee (`status`, `number`, `name`, 
      eid, email, phone, 
      gender, id, login_time, 
      is_email, grade, is_score, 
      create_time, finish_time, cost_time, 
      pwd)
    values (#{status,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{eid,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{gender,jdbcType=INTEGER}, #{id,jdbcType=VARCHAR}, #{loginTime,jdbcType=TIMESTAMP}, 
      #{isEmail,jdbcType=INTEGER}, #{grade,jdbcType=DOUBLE}, #{isScore,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{finishTime,jdbcType=TIMESTAMP}, #{costTime,jdbcType=INTEGER}, 
      #{pwd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="eeid" keyProperty="eeid" parameterType="com.leexam.entity.Examinee" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into examinee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        `status`,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="eid != null">
        eid,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="id != null">
        id,
      </if>
      <if test="loginTime != null">
        login_time,
      </if>
      <if test="isEmail != null">
        is_email,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="isScore != null">
        is_score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="costTime != null">
        cost_time,
      </if>
      <if test="pwd != null">
        pwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        #{eid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isEmail != null">
        #{isEmail,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=DOUBLE},
      </if>
      <if test="isScore != null">
        #{isScore,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costTime != null">
        #{costTime,jdbcType=INTEGER},
      </if>
      <if test="pwd != null">
        #{pwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.leexam.entity.Examinee">
    <!--@mbg.generated-->
    update examinee
    <set>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="eid != null">
        eid = #{eid,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=INTEGER},
      </if>
      <if test="id != null">
        id = #{id,jdbcType=VARCHAR},
      </if>
      <if test="loginTime != null">
        login_time = #{loginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isEmail != null">
        is_email = #{isEmail,jdbcType=INTEGER},
      </if>
      <if test="grade != null">
        grade = #{grade,jdbcType=DOUBLE},
      </if>
      <if test="isScore != null">
        is_score = #{isScore,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="costTime != null">
        cost_time = #{costTime,jdbcType=INTEGER},
      </if>
      <if test="pwd != null">
        pwd = #{pwd,jdbcType=VARCHAR},
      </if>
    </set>
    where eeid = #{eeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.leexam.entity.Examinee">
    <!--@mbg.generated-->
    update examinee
    set `status` = #{status,jdbcType=INTEGER},
      `number` = #{number,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      eid = #{eid,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=INTEGER},
      id = #{id,jdbcType=VARCHAR},
      login_time = #{loginTime,jdbcType=TIMESTAMP},
      is_email = #{isEmail,jdbcType=INTEGER},
      grade = #{grade,jdbcType=DOUBLE},
      is_score = #{isScore,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      cost_time = #{costTime,jdbcType=INTEGER},
      pwd = #{pwd,jdbcType=VARCHAR}
    where eeid = #{eeid,jdbcType=INTEGER}
  </update>

  <select id="selectPage" resultMap="BaseResultMap">
    select * from examinee limit #{start},#{limit}
  </select>

  <select id="selectPageTimeLimit" resultMap="BaseResultMap">
    SELECT * FROM `examinee`
    <where>
      <if test="loginTimeStart != null">
        login_time>=#{loginTimeStart}
      </if>
      <if test="loginTimeEnd != null">
        AND login_time&lt;=#{loginTimeEnd}
      </if>
      <if test="createTimeStart != null">
        AND create_time>=#{createTimeStart}
      </if>
      <if test="createTimeEnd != null">
        AND create_time&lt;=#{createTimeEnd}
      </if>
      <if test="finishTimeStart != null">
        AND finish_time>=#{finishTimeStart}
      </if>
      <if test="finishTimeEnd != null">
        AND finish_time&lt;=#{finishTimeEnd}
      </if>
    </where>
        LIMIT #{start},#{limit}
  </select>

  <select id="selectByEid" resultMap="BaseResultMap">
    SELECT * FROM `examinee` WHERE eid=#{eid}
  </select>

  <select id="selectByEeidAndEid" resultMap="BaseResultMap">
    select * from examinee where eeid=#{eeid} and eid=#{eid}
    </select>

  <select id="selectExamineeSignupDoSignupByOid" resultMap="BaseResultMap">
    SELECT ee.*,sd.sdid,sd.time,sd.eeid eeid2,sd.sid sid2,s.sid,s.sname,s.banner,s.sdesc,s.is_verify,s.collect_info,s.start_time,s.end_time,s.oid,s.url,s.`status` status2,e.eid eid3,e.ename,e.start_time start_time3,e.end_time end_time3,e.login_in_advance,e.restricted_login,e.welcome_msg,e.test_paper,e.personal_info,e.e_sign_up,e.e_practice_mode,e.e_ommitment,e.e_ommitment_body,e.e_locked_exam,e.e_view_results,e.url url3 FROM examinee ee,signup_do sd,signup s,exam e WHERE s.oid=#{oid} AND s.sid=sd.sid AND ee.eeid=sd.eeid AND e.eid=ee.eid
  </select>

  <select id="selectCountByOidAndStatus" resultType="int">
    SELECT COUNT(DISTINCT(ee.eeid)) FROM signup s,signup_do sd,examinee ee WHERE ee.`status`=#{status} AND s.oid=#{oid} AND ee.eeid=sd.eeid AND sd.sid=s.sid
  </select>

  <select id="selectCountToday" resultType="int">
    SELECT COUNT(DISTINCT(ee.eeid)) FROM signup s,signup_do sd,examinee ee WHERE s.oid=#{oid} AND ee.eeid=sd.eeid AND sd.sid=s.sid AND ee.create_time >= date(now()) and ee.create_time &lt; DATE_ADD(date(now()),INTERVAL 1 DAY)
  </select>

  <select id="selectCountSum" resultType="int">
    SELECT COUNT(DISTINCT(ee.eeid)) FROM signup s,signup_do sd,examinee ee WHERE s.oid=#{oid} AND ee.eeid=sd.eeid AND sd.sid=s.sid
  </select>

  <select id="selectCountTodayByOidAndStatus" resultType="int">
    SELECT COUNT(DISTINCT(ee.eeid)) FROM signup s,signup_do sd,examinee ee WHERE ee.`status`=#{status} AND s.oid=#{oid} AND ee.eeid=sd.eeid AND sd.sid=s.sid AND ee.create_time >= date(now()) and ee.create_time &lt; DATE_ADD(date(now()),INTERVAL 1 DAY)
  </select>

  <delete id="deleteByEeids">
    delete from examinee
    <where>
      eeid in
      <foreach collection="eeids" item="eeid" separator="," open="(" close=")">
        #{eeid}
      </foreach>
    </where>
    </delete>

  <select id="selectByEidAndNameOrNumber" resultMap="BaseResultMap">
    SELECT * FROM examinee WHERE (name LIKE #{nameOrNumber} OR number LIKE #{nameOrNumber}) AND eid=#{eid}
  </select>

  <delete id="updateStatusByEeids">
    UPDATE examinee SET `status`=#{status}
    <where>
      eeid IN
      <foreach collection="eeids" item="eeid" open="(" close=")" separator=",">
        #{eeid}
      </foreach>
    </where>
  </delete>

  <select id="selectByEeids" resultMap="BaseResultMap">
    select * from examinee
    <where>
      eeid in
      <foreach collection="eeids" item="eeid" separator="," open="(" close=")">
        #{eeid}
      </foreach>
    </where>
  </select>
</mapper>